import "dotenv/config";
import { Bot } from "grammy";
import { getLastRow, addRowData, getBalance, getFullBalance } from "./sheets";
import { getSheetName, parseMessage } from "./helpers";

const bot = new Bot(process.env.BOT_TOKEN || "");

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message:text", async (ctx) => {
  const text = ctx.message.text;
  const userId = ctx.message.from?.id;

  if (userId !== Number(process.env.ID_USER)) {
    await ctx.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.");
    return;
  }

  const sheetName = getSheetName();

  if (text === "–ë–∞–ª–∞–Ω—Å") {
    const fullBalance = await getFullBalance(sheetName);

    await ctx.api.sendMessage(
      ctx.message.chat.id,
      `\`\`\`\n${fullBalance?.map((row) => row?.join(": ")).join("\n")}\`\`\``,
      {
        parse_mode: "MarkdownV2",
      }
    );

    return;
  }

  const parsedMessage = parseMessage(text);

  if ("error" in parsedMessage) {
    await ctx.reply(
      "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.\n\n" +
        `–û—à–∏–±–∫–∞: ${parsedMessage.error}\n` +
        "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç: –æ–ø–∏—Å–∞–Ω–∏–µ, —Å—É–º–º–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –∫–æ—à–µ–ª–µ–∫\n" +
        "–ü—Ä–∏–º–µ—Ä: –ü—Ä–æ–¥—É–∫—Ç—ã, 1500, –ï–¥–∞, –ù–∞–ª–∏—á–Ω—ã–µ"
    );
    return;
  }

  const { description, amount, category, wallet } = parsedMessage;

  try {
    const processingMessage = await ctx.reply("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...");

    const lastRow = await getLastRow(sheetName, "N");
    const nextRow = lastRow + 1;

    await addRowData(
      sheetName,
      nextRow,
      ["N", "O", "Q", "R", "S"],
      [
        new Date().toISOString().split("T")[0],
        description,
        amount.replaceAll(".", ","),
        category,
        wallet,
      ]
    );

    const { totalBalance, dailyLimit } = await getBalance(sheetName);

    await ctx.reply(
      `‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—Å—Ç ${sheetName}!\n\n` +
        `üí∞ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å: ${totalBalance}\n` +
        `üí∞ –ú–æ–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è: ${dailyLimit}`
    );

    await ctx.api.deleteMessage(
      processingMessage.chat.id,
      processingMessage.message_id
    );
  } catch (error) {
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.");
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err) => {
  console.error("–û—à–∏–±–∫–∞ –±–æ—Ç–∞:", err);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.start();

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
